# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
      
 security-check:
  runs-on: self-hosted
  needs: compile
  steps:
    - uses: actions/checkout@v4

    # âœ… Install Trivy from binary (works on any Ubuntu codename, including plucky)
    - name: Install Trivy (binary)
      run: |
        VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep tag_name | cut -d '"' -f 4)
        curl -Lo trivy.tar.gz https://github.com/aquasecurity/trivy/releases/download/${VERSION}/trivy_${VERSION#v}_Linux-64bit.tar.gz
        tar zxvf trivy.tar.gz
        sudo mv trivy /usr/local/bin/
        trivy --version

    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .

    - name: Gitleaks Code Scan
      run: gitleaks detect --source . --report-path gitleaks-report.json --report-format json

    
 test:
   runs-on: self-hosted
   needs: security-check
   steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: test with Maven
      run: mvn test
 build:
     runs-on: self-hosted
     needs: test
     steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
            name: app-jar
            path: target/*.jar
 sonar_scan:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
 Docker_push:
    runs-on: self-hosted
    needs: sonar_scan
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: app
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
            context: .
            file: ./Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/my-java-app:latest
    
   
  
      
      
  
      
